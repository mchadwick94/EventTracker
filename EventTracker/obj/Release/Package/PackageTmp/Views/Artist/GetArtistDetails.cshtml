@using System.Globalization
@using Microsoft.AspNet.Identity
@model Tracker.Data.tbl_artists
<link href="~/Content/StyleSheet.css" rel="stylesheet" />

@{
    ViewBag.Title = "GetArtistDetails";
}

<div class="container" id="Event-Details-Actions" style="padding: 2vh 0 1vh 0; margin: 0; width: 100%; display: inline-flex">
    <div class="container" id="event-details-previous-page" style="float:left; padding: 1vh 0 0 0; margin: 0; width: 25%">
        @Html.ActionLink("Back to previous page", null, null, null, new { href = Request.UrlReferrer })
    </div>
    <h1 align="center" style="width: 50%">
        <b>@Html.DisplayFor(model => model.Artist_Name)</b>
    </h1>
    <div class="container" id="artist-details-previous-page" style="float:right; padding: 1vh 0 0 0; margin: 0; text-align: right; width: 25%">
        @if ((System.Web.HttpContext.Current.User != null) && System.Web.HttpContext.Current.User.Identity.IsAuthenticated)
            {
            if (User.IsInRole("Admin"))
                {
                @Html.ActionLink("Edit", "../Admin/ArtistEdit", new { Artist_ID = Model.Artist_ID }) <text> | </text>
                }
            }
    </div>
</div>

<div class="jumbotron" id="profile-jumbotron" align="left" style="display: inline-flex; height: 88% !important; overflow:hidden !important;">
    <div class="card" id="profile-card">
        @if (Model.tbl_artistImages.Any())
            {
            <div>
                <img class="profile-image" src="@Url.Action("Index", "File", new { File_ID = Model.tbl_artistImages.First(f => f.Artist_ID == Model.Artist_ID).File_ID })" />
            </div>
            }
        else
            {
            <img class="profile-image" src="@Url.Content("~/Content/images/default-profile.jpeg")" />
            }
    </div>
    <div class="card" id="profile-history-card">
        <div class="body-content" style="background-color: transparent;">
            <div class="tab" id="artist-events-tab-bar">
                <button class="tablinks" id="upcomingevent-tab" onclick="openVenuePage(event, 'artist-upcomingevent-tabcontent')">Upcoming Events</button>
                <button class="tablinks" id="pastevent-tab" onclick="openVenuePage(event, 'artist-pastevent-tabcontent')">Past Events</button>
            </div>

            <div class="tabcontent" id="artist-upcomingevent-tabcontent">
                <div class="card-body" id="venue-upcomingevents-card">
                    Viewing the next 4 events. @Html.ActionLink("View More...", "../Artist/FilterArtistEvents", new { @Artist_ID = Model.Artist_ID, @Search_Start_Date = Convert.ToString(string.Format("{0:yyyy/MM/dd}", System.DateTime.Today)) })
                    @foreach (var item in Model.tbl_eventlineup.Where((x => x.tbl_events.Event_Date >= System.DateTime.Now && x.Artist_ID == Model.Artist_ID)).OrderBy(x => x.tbl_events.Event_Date).Take(4))
                        {
                        <div class="row" style="width: 100%; height: 25% !important; margin: 0 0 2% 0;">
                            <div class="card" id="artist-event-tile-card">
                                <div class="card-body" style="display: block">
                                    <div class="col" style="width: 40%; height: 100%; float: left">
                                        <a href="@Url.Action("GetEventDetails", "Event", new { Event_ID = item.Event_ID })">
                                            <div class="event-index-image" id="" style="height: 100% !important;">
                                                @if (item.tbl_events.tbl_eventImages.Any())
                                                    {
                                                    <img class="event-details-image" id="event-index-image" src="@Url.Action("EventImageIndex", "File", new { File_ID = item.tbl_events.tbl_eventImages.First(f => f.Event_ID == item.Event_ID).File_ID })" />
                                                    }
                                                else
                                                    {
                                                    <img class="event-details-image" id="event-index-image" src="@Url.Content("~/Content/images/default_image.jpg")" />
                                                    }
                                            </div>
                                        </a>
                                    </div>
                                    <div class="col" style="width: 60%; height: 100%; float: left">
                                        <ul class="list-group list-group-flush" id="artist-event-index-details">
                                            <li class="list-group-item" id="artist-event-index-name"><img id="event-index-location-pin" src="~/Content/images/name-icon.png" /><b>@Html.DisplayFor(modelItem => item.tbl_events.Event_Name)</b></li>
                                            <li class="list-group-item" id="artist-event-index-location">
                                                <span><img id="artist-event-index-location-pin" src="~/Content/images/location-pin.png" />@item.tbl_events.tbl_venues.V_Name, @item.tbl_events.tbl_venues.tbl_cities.C_Name, @item.tbl_events.tbl_venues.tbl_cities.tbl_countries.C_Iso</span>
                                            </li>
                                            <li class="list-group-item" id="artist-event-index-date"> <span><img id="artist-event-index-location-pin" src="~/Content/images/calendar-icon.png" />@Convert.ToString(string.Format("{0:dddd dd MMMM yyyy}", item.tbl_events.Event_Date))</span></li>
                                            <li class="list-group-item" id="artist-event-index-addToUser">

                                                @if ((System.Web.HttpContext.Current.User != null) && System.Web.HttpContext.Current.User.Identity.IsAuthenticated)
                                                    {@*Checks to see if there is a current user*@
                                                    if (((IList<string>)ViewBag.MyEvents).Contains(item.Event_ID.ToString()))
                                                        {
                                                        @Html.ActionLink("Remove from my events", "../Event/DeleteFromUserHistory", new { History_ID = item.tbl_events.tbl_eventhistory.Where(x => x.Event_ID == item.Event_ID && x.User_ID == User.Identity.GetUserId()).Select(x => x.History_ID).FirstOrDefault() })
                                                        }
                                                    else
                                                        {
                                                        @Html.ActionLink("Add to my Events", "../Event/AddToUser", new { Event_ID = item.Event_ID })}
                                                    }
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                        }
                </div>
            </div>
            <div class="tabcontent" id="artist-pastevent-tabcontent">
                @if (Model.tbl_artisthistory.Where(x => x.Artist_ID == Model.Artist_ID && x.tbl_events.Event_Date < System.DateTime.Now).Count() == 0)
                    {
                    <br /> <br />
                    <h3 id="profile-title">No Past Events</h3>
                    }
                else
                    {
                    <div class="card-body" id="venue-upcomingevents-card">
                        Viewing the previous 4 events. @Html.ActionLink("View More...", "../Artist/FilterArtistEvents", new { @Artist_ID = Model.Artist_ID, @Search_End_Date = Convert.ToString(string.Format("{0:yyyy/MM/dd}", System.DateTime.Today)) })
                        @foreach (var item in Model.tbl_eventlineup.Where((x => x.tbl_events.Event_Date < System.DateTime.Now && x.Artist_ID == Model.Artist_ID)).OrderByDescending(x => x.tbl_events.Event_Date).Take(4))
                            {
                            <div class="row" style="width: 100%; height: 25% !important; margin: 0 0 2% 0;">
                                <div class="card" id="artist-event-tile-card">
                                    <div class="card-body" style="display: block">
                                        <div class="col" style="width: 40%; height: 100%; float: left">
                                            <a href="@Url.Action("GetEventDetails", "Event", new { Event_ID = item.Event_ID })">
                                                <div class="event-index-image" id="" style="height: 100% !important;">
                                                    @if (item.tbl_events.tbl_eventImages.Any())
                                                        {
                                                        <img class="event-details-image" id="event-index-image" src="@Url.Action("EventImageIndex", "File", new { File_ID = item.tbl_events.tbl_eventImages.First(f => f.Event_ID == item.Event_ID).File_ID })" />
                                                        }
                                                    else
                                                        {
                                                        <img class="event-details-image" id="event-index-image" src="@Url.Content("~/Content/images/default_image.jpg")" />
                                                        }
                                                </div>
                                            </a>
                                        </div>
                                        <div class="col" style="width: 60%; height: 100%; float: left">
                                            <ul class="list-group list-group-flush" id="artist-event-index-details">
                                                <li class="list-group-item" id="artist-event-index-name"><img id="event-index-location-pin" src="~/Content/images/name-icon.png" /><b>@Html.DisplayFor(modelItem => item.tbl_events.Event_Name)</b></li>
                                                <li class="list-group-item" id="artist-event-index-location">
                                                    <span><img id="artist-event-index-location-pin" src="~/Content/images/location-pin.png" />@item.tbl_events.tbl_venues.V_Name, @item.tbl_events.tbl_venues.tbl_cities.C_Name, @item.tbl_events.tbl_venues.tbl_cities.tbl_countries.C_Iso</span>
                                                </li>
                                                <li class="list-group-item" id="artist-event-index-date"> <span><img id="artist-event-index-location-pin" src="~/Content/images/calendar-icon.png" />@Convert.ToString(string.Format("{0:dddd dd MMMM yyyy}", item.tbl_events.Event_Date))</span></li>
                                                <li class="list-group-item" id="artist-event-index-addToUser">

                                                    @if ((System.Web.HttpContext.Current.User != null) && System.Web.HttpContext.Current.User.Identity.IsAuthenticated)
                                                        {@*Checks to see if there is a current user*@
                                                        if (((IList<string>)ViewBag.MyEvents).Contains(item.Event_ID.ToString()))
                                                            {
                                                            @Html.ActionLink("Remove from my events", "../Event/DeleteFromUserHistory", new { History_ID = item.tbl_events.tbl_eventhistory.Where(x => x.Event_ID == item.Event_ID && x.User_ID == User.Identity.GetUserId()).Select(x => x.History_ID).FirstOrDefault() })
                                                            }
                                                        else
                                                            {
                                                            @Html.ActionLink("Add to my Events", "../Event/AddToUser", new { Event_ID = item.Event_ID })}
                                                        }
                                                </li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            }
                    </div>
                    }
            </div>
        </div>
    </div>
</div>

<style>
    #artist-event-tile-card {
        box-shadow: 0 0 10px grey;
        background-color: #222;
        display: inline-block;
        border-radius: 20px;
    }

    #artist-event-index-details {
        padding: 1% 5% 1% 0;
        margin-bottom: 1% !important;
    }

    #artist-event-index-date, #artist-event-index-location, #artist-event-index-name {
        height: 20%;
        width: 95%;
        background-color: inherit;
        border: none;
        border-bottom: 2px solid #171616;
        font-size: 14px;
        color: #b5b5b5 !important;
        margin: 1% 0 1% 5%;
        padding: 0;
        text-align: left;
        float: left;
    }

    /* Style the tab */
    #artist-events-tab-bar {
        overflow: hidden;
        border: 2px solid #171616;
        background-color: #171616;
        height: 5%;
        width: 100%;
    }

        /* Style the buttons that are used to open the tab content */
        #artist-events-tab-bar button {
            background-color: inherit !important;
            float: left;
            border: none;
            outline: none;
            cursor: pointer;
            padding: 7px 16px;
            transition: 0.1s;
            font-size: 18px;
            width: 50%;
        }

            /* Change background color of buttons on hover */
            #artist-events-tab-bar button:hover {
                background-color: #333333 !important;
            }

            /* Create an active/current tablink class */
            #artist-events-tab-bar button.active {
                background-color: #abff94 !important;
                color: #171616 !important;
            }

    /* Style the tab content */
    .tabcontent {
        display: none;
        padding: 6px 12px;
        border-top: none;
        background-color: #222222;
        width: 100%;
        height: 95%;
    }

    #artist-event-index-location-pin {
        height: auto;
        width: 6%;
        margin-right: 2%;
    }

    #artist-event-index-addToUser {
        height: 20%;
        width: 95%;
        background-color: inherit;
        border: none;
        padding: 0% 0 1% 0;
        margin: 1% 0% 1% 5%;
    }
</style>

<script>
    function openVenuePage(evt, pageName) {
        // Declare all variables
        var i, tabcontent, tablinks;

        // Get all elements with class="tabcontent" and hide them
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }

        // Get all elements with class="tablinks" and remove the class "active"
        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }

        // Show the current tab, and add an "active" class to the button that opened the tab
        document.getElementById(pageName).style.display = "block";
        evt.currentTarget.className += " active";
    };

    document.addEventListener('readystatechange', () => {
        if (document.readyState == 'complete') loadLanding();
    });

    function loadLanding() {
        document.getElementById('upcomingevent-tab').click();
    };
</script>